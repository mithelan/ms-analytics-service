version: 0.2

phases:
  install:
    commands:
      - echo "Installing kubectl..."
      - curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.33.0/2025-05-01/bin/linux/amd64/kubectl
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/kubectl
      - kubectl version --client

      - echo "Installing Helm..."
      - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - helm version

      - echo "Confirming AWS CLI identity..."
      - aws sts get-caller-identity

  pre_build:
    commands:
      - echo "Setting up kubeconfig..."
      - aws eks update-kubeconfig --region ap-southeast-1 --name ms-lugx-cluster

      - echo "Testing cluster access..."
      - kubectl auth can-i list nodes

  build:
    commands:
      - |
        echo "Checking current active color..."
        CURRENT_COLOR=$(kubectl get configmap deployment-color -o jsonpath="{.data.color}" 2>/dev/null || echo "")
        if [ -z "$CURRENT_COLOR" ]; then
          echo "No existing deployment color found, defaulting to blue."
          CURRENT_COLOR="blue"
        fi

        if [ "$CURRENT_COLOR" = "blue" ]; then
          NEXT_COLOR="green"
          VALUES_FILE="helm/values-green.yaml"
        else
          NEXT_COLOR="blue"
          VALUES_FILE="helm/values-blue.yaml"
        fi

        echo "VALUES_FILE=$VALUES_FILE"
        ls -l ./helm
        helm version
        helm dependency update ./helm || true

        echo "Deploying analytics-$NEXT_COLOR..."
        helm upgrade --install analytics-${NEXT_COLOR} ./helm -f $VALUES_FILE --namespace default --debug > helm-deploy.log 2>&1 || {
          echo "Helm upgrade failed, printing logs:"
          cat helm-deploy.log
          exit 1
        }

      - echo "Waiting for analytics-$NEXT_COLOR deployment to stabilize..."
      - kubectl rollout status deployment analytics-${NEXT_COLOR}

      - echo "Switching Ingress to analytics-$NEXT_COLOR..."
      - kubectl patch ingress analytics-ingress -p "{\"spec\":{\"rules\":[{\"host\":\"13.250.183.84.sslip.io\",\"http\":{\"paths\":[{\"path\":\"/analytics\",\"backend\":{\"service\":{\"name\":\"analytics-${NEXT_COLOR}-svc\",\"port\":{\"number\":80}}}}]}}]}}"

      - echo "Updating active color ConfigMap to $NEXT_COLOR..."
      - kubectl create configmap deployment-color --from-literal=color=$NEXT_COLOR --dry-run=client -o yaml | kubectl apply -f -

artifacts:
  files:
    - imagedefinitions.json


